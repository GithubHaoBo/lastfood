<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- 在com.bean包下面的所有注解spring都可以扫描到，然后起作用 -->
    <context:component-scan base-package="com.service,com.bean"></context:component-scan>


    <!--  以下配置都是整合相关的 -->
    <!--  spring引入 properties文件 -->
    <context:property-placeholder location="classpath:database.properties"/>

    <!--  此地方可以使用 C3P0 也可以使用阿里的 druid
    destroy-method="close" 如果使用完了的数据库链接 不销毁 放入连接池
     -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${user}" />
        <property name="password" value="${password}" />
    </bean>

    <!-- spring会帮我们创建sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="dataSource" ref="dataSource"></property>

        <!-- 读取spring容器的时候，会把mybatis的配置文件读取到 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />

    </bean>

    <!-- 自动把com.dao包下面的mapper接口 交给spring容器管理  mapper接口和配置文件名称要一致 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao" />
    </bean>


    <!-- 启动spring的事务管理   配置都是固定的在哪个项目都几乎一样 -->
    <!-- 定义事务管理器 -->
    <bean id="trans" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:advice id="adviceTran" transaction-manager="trans">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" isolation="DEFAULT"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>

            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceMethod"
                      expression="execution(* com.service.*.*(..))" />
        <aop:advisor advice-ref="adviceTran" pointcut-ref="serviceMethod" />
    </aop:config>

</beans>